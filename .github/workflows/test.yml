name: Test

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    test:
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest]
                python-version: ['3.10']
                include:
                    - os: macos-latest
                      python-version: '3.10'
                      architecture: 'arm64' # Test MLX on Apple Silicon
                    - os: ubuntu-latest
                      python-version: '3.10'
                      architecture: 'x64' # Test FAISS on x86

        steps:
            - uses: actions/checkout@v4

            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python-version }}
                  architecture: ${{ matrix.architecture || 'x64' }}

            - name: Install Poetry
              uses: snok/install-poetry@v1
              with:
                  version: 1.7.1
                  virtualenvs-create: true
                  virtualenvs-in-project: true

            - name: Load cached venv
              id: cached-poetry-dependencies
              uses: actions/cache@v3
              with:
                  path: .venv
                  key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

            - name: Install dependencies
              if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
              run: |
                  if [ "${{ matrix.os }}" = "macos-latest" ] && [ "${{ matrix.architecture }}" = "arm64" ]; then
                    poetry install --no-interaction --no-root
                  else
                    poetry install --no-interaction --no-root --without mlx
                  fi

            - name: Install project
              run: |
                  if [ "${{ matrix.os }}" = "macos-latest" ] && [ "${{ matrix.architecture }}" = "arm64" ]; then
                    poetry install --no-interaction
                  else
                    poetry install --no-interaction --without mlx
                  fi

            - name: Run tests
              run: |
                  poetry run pytest tests/ -v --cov=codesleuth --cov-report=term-missing

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v3
              with:
                  file: ./coverage.xml
                  fail_ci_if_error: true
